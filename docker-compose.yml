# Docker Compose for TestInsight AI - Development Environment
services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: development
    container_name: testinsight-backend-dev
    # Backend port exposed for development/debugging only
    ports:
      - "8000:8000"
    volumes:
      # Mount source code for development hot-reload
      - ./backend:/app/backend:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./uv.lock:/app/uv.lock:ro
      # Persist settings data outside container
      - ./data:/app/data
    environment:
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
    env_file:
      - .env
    networks:
      - testinsight-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: builder
    container_name: testinsight-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for development hot-reload
      - ./frontend/src:/app/src:ro
      - ./frontend/index.html:/app/index.html:ro
      - ./frontend/package.json:/app/package.json:ro
      - ./frontend/package-lock.json:/app/package-lock.json:ro
      - ./frontend/tsconfig.json:/app/tsconfig.json:ro
      - ./frontend/tailwind.config.js:/app/tailwind.config.js:ro
      - ./frontend/postcss.config.js:/app/postcss.config.js:ro
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - testinsight-network
    restart: unless-stopped
    depends_on:
      - backend
    command: npm start
    stdin_open: true
    tty: true



networks:
  testinsight-network:
    driver: bridge
    name: testinsight-network
