# Docker Compose for TestInsight AI - Production Environment
services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      target: production
    container_name: testinsight-backend-prod
    ports:
      - "8000:8000"
    volumes:
      # Persist settings data outside container
      - ./data:/app/data
    environment:
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - PYTHONPATH=/app
    env_file:
      - .env.production
    networks:
      - testinsight-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: testinsight-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - testinsight-network
    restart: always
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  testinsight-network:
    driver: bridge
    name: testinsight-network-prod
